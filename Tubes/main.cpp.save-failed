#include <iostream>
#include <stdlib.h>

#include "list_parent.h"
#include "list_child.h"
#include "list_relasi.h"

using namespace std;

void Menu(){
    infotype_parent parent;
    infotype_child child;

    List_child ListC;
    List_parent ListP;
    List_relasi ListR;

    createListChild(ListC);
    createListParent(ListP);
    createListRelasi(ListR);

    adr_child Chi;
    adr_parent Par;
    adr_relasi Rel;

    int pilihMenu,Nmr,INPUT,INPUT2;
    do{
        cout << "=========== PEMBELIAN KASET ===========" << endl;
        cout << "1. Membuat Data Member " << endl;
        cout << "2. Membuat Data Kaset " << endl;
        cout << "3. Membeli Kaset " << endl;
        cout << "4. Menampilkan Data " << endl;
        cout << "5. Hapus Data " << endl;
        cout << "6. Rekomendasi Film" << endl;
        cout << "7. Total Harga Kaset" << endl;
        cout << "0. Quit" << endl;
        cout << "\nChoose Menu : ";
        cin >> pilihMenu;
        system("CLS");
        switch(pilihMenu){
        case 1:
            case1(ListC,child);
            break;
        case 2:
            case2(ListP,parent);
            break;
        case 3:
            case3(ListC,ListP,ListR,Chi,Par,Rel);
            break;
        case 4:
            cout << "1. Menampilkan Data Member" << endl;
            cout << "2. Menampilkan Data Kaset " << endl;
            cout << "3. Menampilkan Member dan Belanjaannya " << endl; /// Pas child ada di relasi terus child dihapus berhasil , tapi pas nampilin relasi gagal.
            cout << "4. Menampilkan Kaset Dibeli oleh Siapa " << endl;
            cout << "\nChoose Menu : ";
            cin >> Nmr;
            system("CLS");
            if(Nmr == 1){
                printChild(ListC);
                bersih();
            } else if(Nmr == 2){
                printParent(ListP);
                bersih();
            } else if(Nmr == 3){
                printRelasi(ListR);
                bersih();
            } else if (Nmr == 4) {
                cout << "ID Kaset : ";
                cin >> INPUT;
                printChildTOParent(ListR,INPUT);
            }
            break;
        case 5:
            cout << "1. Menghapus Data Member " << endl;
            cout << "2. Menghapus Data Kaset " << endl;
            cout << "3. Tidak jadi membeli " << endl;
            cout << " \nChoose Menu";
            cin >> Nmr;
            if(Nmr == 1){
                cout << "ID Member yang akan di hapus : ";
                cin >> INPUT;
                if (findElmChild(ListC,INPUT) != NULL){
                    if (cariChildDiRelasi(ListR,INPUT) != NULL){
                        deleteChilDiRelasi(ListR,INPUT);
                        deleteListChild(ListC,INPUT);
                    } else {
                        deleteListChild(ListC,INPUT);
                    }
                } else {
                    cout << "Tidak ada data" <<endl;
                }
                bersih();
            } else if(Nmr == 2){
                cout << "ID Kaset yang akan di hapus : ";
                cin >> INPUT;
                if (findElmParent(ListP,INPUT) != NULL) {
                    if(cariParentDiRelasi(ListR,INPUT) != NULL) {
                        deleteParentdiRelasi(ListR,INPUT);
                    } else {
                        deleteListParent(ListP,INPUT);
                    }
                } else {
                    cout << "Tidak ada data" <<endl;
                }
                bersih();

            } else if (Nmr == 3) {
                cout <<"ID Kaset : ";
                cin >> INPUT;
                cout <<"ID Member : ";
                cin >> INPUT2;
                deleteListRelasi(ListR,INPUT2,INPUT);
                bersih();
            }

            break;
        case 6:
            cout << "Jenis kaset favorit : ";

            break;
        case 7:
            cout << "Masukan ID Member Anda : ";
            cin >> INPUT;
            hitungHargaKaset(ListR, INPUT);
            break;
        }
        if(pilihMenu == 0){
            break;
        }
    }while (true);

}
int main()
{
    Menu();
    return 0;
}
